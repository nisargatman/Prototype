package com.kascayd.prototype;


import android.content.Context;
import android.content.pm.PackageManager;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.support.v4.app.ActivityCompat;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import com.kascayd.prototype.retro.Loc;
import com.kascayd.prototype.retro.ParkRequest;
import com.kascayd.prototype.retro.ParkResponse;

import java.util.Calendar;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

public class MainActivity extends AppCompatActivity {

    /*private static final String TAG = MainActivity.class.getSimpleName();
    private static final int REQUEST_PERMISSIONS_REQUEST_CODE = 34;
    private FusedLocationProviderClient mFusedLocationClient;
    protected Location mLastLocation;
    private String mLatitudeLabel;
    private String mLongitudeLabel;
    private TextView mLatitudeText;
    private TextView mLongitudeText;*/
    private static String ROOT_URL = "www.kascayd.co.uk:8080/ParkServices/";
    private static final String KEY_VERSION = "key_version";
    private static final String KEY_HOSTNAME = "key_hostname";
    private LocationManager locationManager;
    private MyLocationListener locationListener;
    private APIService mAPIService;
    private TextView mResponseTv;
    private Loc loc;
    /*private Double latitude;
    private Double longitude;*/
    private String locationString;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        final String device = "QK6A-JI6S-7ETR-0A6C";
        locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
        locationListener = new MyLocationListener();

        Button submitBtn = (Button) findViewById(R.id.button3);
        mResponseTv = (TextView) findViewById(R.id.textView4);

        mAPIService = APIUtils.getAPIService();


        if (ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
//            autogenerated code below: need to request permissions...
//             TODO: Consider calling
//                ActivityCompat#requestPermissions
//             here to request the missing permissions, and then overriding
//               public void onRequestPermissionsResult(int requestCode, String[] permissions,
//                                                      int[] grantResults)
//             to handle the case where the user grants the permission. See the documentation
//             for ActivityCompat#requestPermissions for more details.
            locationString = "(location permissions not given)";
            Log.e("status", "perm not given");
        }

        locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 10000, 0, locationListener);


        Loc loc = new Loc();
        loc.setLat(52.21275347);
        loc.setLon(0.13038662);
        loc.setAlt(11);
        loc.setAcc(5);
        String locTest = loc.getLat() + " " + loc.getLon() + "  " + loc.getAcc() + "  " + loc.getAlt();

        final ParkRequest parkRequest = new ParkRequest();
        parkRequest.setDevice(device);
        parkRequest.setLoc(loc);
        Log.e("Loca", locTest);
        Log.e("Device", device);


        submitBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

                // String body = bodyEt.getText().toString().trim();
                sendPost(parkRequest);
                String Parktest = parkRequest.getDevice() +" "+ parkRequest.getLoc().getLon().toString()+" "+ parkRequest.getLoc().getLat().toString()+" "+ parkRequest.getLoc().getAcc().toString()+" "+ parkRequest.getLoc().getAlt().toString();
                Log.e("TestDev", Parktest);

            }
        });
    }


        public void sendPost(ParkRequest parkRequest) {

            Log.e("SendPost","Clicked");

            mAPIService.savePost(parkRequest).enqueue(new Callback<ParkResponse>() {
                @Override
                public void onResponse(Call<ParkResponse> call, Response<ParkResponse> response) {

                    if(response.isSuccessful()) {
                        showResponse(response.body().toString());
                        Log.e("Status", "post submitted to API." + response.body().toString());
                    }

                    else if (response.code() == 404){
                        Log.e("Working", response.errorBody().toString());
                        showResponse("Location not in Parking");
                    }

                    else
                        Log.e("Lag gayi bc",response.message());
                }

                @Override
                public void onFailure(Call<ParkResponse> call, Throwable t) {
                    Log.e("Status", "Unable to submit post to API.");
                    Log.e("Code", t.toString());
                }
            });
        }

        public void showResponse(String response) {
            if(mResponseTv.getVisibility() == View.GONE) {
                mResponseTv.setVisibility(View.VISIBLE);
            }
            mResponseTv.setText(response);
        }



    public void StartPress(View view) {
        String mydate = java.text.DateFormat.getDateTimeInstance().format(Calendar.getInstance().getTime());
        Double latitude;
        Double longitude;
        String locationString;
        Log.e("StartPress", "Clicked");

//      from  https://stackoverflow.com/a/5757910

        // get the last know location from your location manager.
        if (ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
//            autogenerated code below: need to request permissions...
//             TODO: Consider calling
//                ActivityCompat#requestPermissions
//             here to request the missing permissions, and then overriding
//               public void onRequestPermissionsResult(int requestCode, String[] permissions,
//                                                      int[] grantResults)
//             to handle the case where the user grants the permission. See the documentation
//             for ActivityCompat#requestPermissions for more details.
            locationString = "(location permissions not given)";
        }
        else {
            locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, locationListener);

            latitude = locationListener.latitude;
//            Log.e("Latitude", latitude.toString());

            longitude = locationListener.longitude;
//            Log.e("Longitude", longitude.toString());


            if (latitude != null && longitude != null) {
                locationString = "(" + latitude + ", " + longitude + ") ";
            }
            else {
                locationString = "(No location obtained.)";
            }
        }

        String message = "\n\n\nYou have parked at: " + locationString + "\nTime : "+ mydate;
        TextView textView = (TextView) findViewById(R.id.textView);
        textView.setText(message);
    }

    public void StopPress(View view){
        String mydate = java.text.DateFormat.getDateTimeInstance().format(Calendar.getInstance().getTime());
        String message = "\n\nYour parking has ended. \nTime : "+mydate;
        TextView textView = (TextView) findViewById(R.id.textView2);
        textView.setText(message);
    }

    //ParkResponse client = ServiceGenerator.createService(ParkResponse.class);


}

class MyLocationListener implements LocationListener {

    public Double latitude;
    public Double longitude;

    @Override
    public void onLocationChanged(Location location) {
        latitude = location.getLatitude();
        longitude = location.getLongitude();
    }

    @Override
    public void onProviderDisabled(String provider) {}

    @Override
    public void onProviderEnabled(String provider) {}
    @Override
    public void onStatusChanged(String provider, int status, Bundle extras) {}
}


